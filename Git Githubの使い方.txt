Gitとは？
Gitは、ソースコードやファイルのバージョン管理を行うためのツールです。
過去の変更を記録し、複数人で同時に作業する場合も便利です。

GitHubとは？
GitHubは、Gitのリポジトリ（プロジェクトのデータ保存場所）をクラウド上でホストするサービスです。
Gitを使ってコードを共有したり、共同開発を行う場として使われます。

【使い方の基本ステップ】
1. Gitのインストール
まず、Gitをインストールします。

Windows: Git公式サイトからインストールできます。



2. Gitの設定
Gitを初めて使う場合、名前とメールアドレスを設定します。

git config --global user.name "あなたの名前"
git config --global user.email "あなたのメールアドレス"



3. GitHubアカウントの作成
GitHub公式サイトでアカウントを作成します。
プロフィールを設定します（省略可）。


※以下はVS CODEの昨日で簡易的に操作可能


4. リポジトリの作成
リポジトリとは、プロジェクトのファイルを管理する場所です。

GitHubで「New Repository」をクリックします。
リポジトリ名を入力して「Create Repository」をクリックします。



5. ローカルリポジトリの設定
ローカル（自分のPC）にリポジトリを作成します。

新しいプロジェクトの場合:
プロジェクトフォルダを作成して移動:

mkdir my-project
cd my-project

Gitリポジトリを初期化:

git init

既存のGitHubリポジトリをクローンする場合:
クローン（コピー）:

git clone <リポジトリのURL>

例:

git clone https://github.com/your-username/repository-name.git



6. 基本的なGitの操作
ファイルを追加・変更する:
ファイルを追加または編集します。

ステージング（変更を記録する準備）:

git add ファイル名

または、全ファイルをまとめてステージング:

git add .

コミット（変更を記録）:

git commit -m "変更内容のメッセージ"



7. リモートリポジトリ（GitHub）へのプッシュ
ローカルの変更をGitHubに送信します。

git push origin main
※「main」はリポジトリのデフォルトブランチ名です。



8. GitHubから変更を取得する（Pull）
他の人が変更した内容を自分のPCに反映します。

git pull origin main



覚えるべき基本コマンド一覧

コマンド	                説明

git init	               リポジトリを初期化する
git clone <URL>	           リポジトリをコピーする
git status	               現在の状態を確認する
git add <ファイル名>	    ファイルをステージングする
git commit -m "メッセージ"	変更を記録する（コミット）
git push origin main	   リモートリポジトリにプッシュする
git pull origin main	   リモートリポジトリから変更を取得する



練習のおすすめ
ローカル環境で簡単なプロジェクトを作成し、git add, git commit を試す。
GitHubリポジトリを作成し、プッシュ＆プルの練習をする。
GitHubの「Pull Request」機能を使って共同作業をシミュレーションしてみる。
必要なら実際に手順を一緒に進めるサポートもできます！質問があれば教えてください。